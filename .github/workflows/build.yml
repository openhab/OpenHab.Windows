name: 'Build App Package'

on:
  workflow_call:
    inputs:
      build_configuration:
        description: 'The build configuration to use'
        type: string
        required: true
        default: 'Release'
      bundle_Platforms: 
        type: string
        description: 'Defines the platforms for the app package.'
        required: false
        default: ' x86|x64|ARM'
      build_number:
        type: string
        description: 'The build number to use'
        required: true

jobs:
  build:
    name: 'Build App Package'
    runs-on: windows-latest
    env:
      output_directory: ${{github.workspace}}\build
    steps:
    - name: Checkout main code
      uses: actions/checkout@v2
      with:
        path: repo
        clean: true

    - name: Update Version Number in app files
      id: update-packageverion
      shell: pwsh
      run: | 
            $version = [System.Version]::Parse('${{inputs.build_number}}')       
            ${{github.workspace}}\repo\.github\workflows\scripts\Set-Version.ps1 -SourceDirectory '${{github.workspace}}/repo/src/' -Major $version.Major -Minor $version.Minor -Build  $version.Build -Revision 0 -SetVersion

    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.0.5
      with:
        nuget-version: 'latest'
    
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x.x'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu'

    - name: Cache SonarQube Cloud packages
      uses: actions/cache@v4
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner

    - name: Install SonarQube Cloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

    - name: Begin SonarQube analyze
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      shell: pwsh
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"openhab_openhab-windows" /o:"openhab" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

    - name: Restore nuget packages
      shell: pwsh
      run: | 
            dotnet restore ${{github.workspace}}\repo\OpenHAB.Windows.sln --force --no-cache

    - name: Build OpenHab Windows App
      shell: pwsh
      run: |
          dotnet msbuild ${{github.workspace}}\repo\OpenHAB.Windows.sln `
              -property:Platform="x86" `
              -property:AppxBundlePlatforms="${{inputs.bundle_Platforms}}" `
              -property:AppxPackageDir="${{env.output_directory}}" `
              -property:AppxBundle=Always `
              -property:UapAppxPackageBuildMode=StoreUpload `
              -property:Configuration="${{inputs.build_configuration}}" `
              -target:Rebuild `
              -restore:false
    
    - name: End SonarQube analyze
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      shell: pwsh
      run: |
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    - name: List files in output directory
      shell: pwsh
      working-directory: ${{env.output_directory}}
      run: |
        Get-ChildItem -Path ${{env.output_directory}}

    - name: Upload App Package
      uses: actions/upload-artifact@v4
      with:
        name: app
        path: ${{env.output_directory}}