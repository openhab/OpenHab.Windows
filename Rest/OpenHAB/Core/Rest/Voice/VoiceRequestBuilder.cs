// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using OpenHAB.Core.Rest.Voice.Defaultvoice;
using OpenHAB.Core.Rest.Voice.Dialog;
using OpenHAB.Core.Rest.Voice.Interpreters;
using OpenHAB.Core.Rest.Voice.Listenandanswer;
using OpenHAB.Core.Rest.Voice.Say;
using OpenHAB.Core.Rest.Voice.Voices;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace OpenHAB.Core.Rest.Voice {
    /// <summary>
    /// Builds and executes requests for operations under \voice
    /// </summary>
    public class VoiceRequestBuilder : BaseRequestBuilder {
        /// <summary>The defaultvoice property</summary>
        public DefaultvoiceRequestBuilder Defaultvoice { get =>
            new DefaultvoiceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The dialog property</summary>
        public DialogRequestBuilder Dialog { get =>
            new DialogRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The interpreters property</summary>
        public InterpretersRequestBuilder Interpreters { get =>
            new InterpretersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The listenandanswer property</summary>
        public ListenandanswerRequestBuilder Listenandanswer { get =>
            new ListenandanswerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The say property</summary>
        public SayRequestBuilder Say { get =>
            new SayRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The voices property</summary>
        public VoicesRequestBuilder Voices { get =>
            new VoicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="VoiceRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public VoiceRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/voice", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="VoiceRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public VoiceRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/voice", rawUrl) {
        }
    }
}
