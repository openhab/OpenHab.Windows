// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using OpenHAB.Core.Rest.Habot.Attributes;
using OpenHAB.Core.Rest.Habot.Cards;
using OpenHAB.Core.Rest.Habot.Chat;
using OpenHAB.Core.Rest.Habot.Compat;
using OpenHAB.Core.Rest.Habot.Greet;
using OpenHAB.Core.Rest.Habot.Notifications;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace OpenHAB.Core.Rest.Habot {
    /// <summary>
    /// Builds and executes requests for operations under \habot
    /// </summary>
    public class HabotRequestBuilder : BaseRequestBuilder {
        /// <summary>The attributes property</summary>
        public AttributesRequestBuilder Attributes { get =>
            new AttributesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The cards property</summary>
        public CardsRequestBuilder Cards { get =>
            new CardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The chat property</summary>
        public ChatRequestBuilder Chat { get =>
            new ChatRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The compat property</summary>
        public CompatRequestBuilder Compat { get =>
            new CompatRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The greet property</summary>
        public GreetRequestBuilder Greet { get =>
            new GreetRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The notifications property</summary>
        public NotificationsRequestBuilder Notifications { get =>
            new NotificationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="HabotRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public HabotRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/habot", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="HabotRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public HabotRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/habot", rawUrl) {
        }
    }
}
