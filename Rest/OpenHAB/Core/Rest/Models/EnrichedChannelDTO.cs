// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace OpenHAB.Core.Rest.Models {
    public class EnrichedChannelDTO : IAdditionalDataHolder, IParsable {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The autoUpdatePolicy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AutoUpdatePolicy { get; set; }
#nullable restore
#else
        public string AutoUpdatePolicy { get; set; }
#endif
        /// <summary>The channelTypeUID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ChannelTypeUID { get; set; }
#nullable restore
#else
        public string ChannelTypeUID { get; set; }
#endif
        /// <summary>The configuration property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnrichedChannelDTO_configuration? Configuration { get; set; }
#nullable restore
#else
        public EnrichedChannelDTO_configuration Configuration { get; set; }
#endif
        /// <summary>The defaultTags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DefaultTags { get; set; }
#nullable restore
#else
        public List<string> DefaultTags { get; set; }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The itemType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ItemType { get; set; }
#nullable restore
#else
        public string ItemType { get; set; }
#endif
        /// <summary>The kind property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Kind { get; set; }
#nullable restore
#else
        public string Kind { get; set; }
#endif
        /// <summary>The label property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Label { get; set; }
#nullable restore
#else
        public string Label { get; set; }
#endif
        /// <summary>The linkedItems property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? LinkedItems { get; set; }
#nullable restore
#else
        public List<string> LinkedItems { get; set; }
#endif
        /// <summary>The properties property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public EnrichedChannelDTO_properties? Properties { get; set; }
#nullable restore
#else
        public EnrichedChannelDTO_properties Properties { get; set; }
#endif
        /// <summary>The uid property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Uid { get; set; }
#nullable restore
#else
        public string Uid { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="EnrichedChannelDTO"/> and sets the default values.
        /// </summary>
        public EnrichedChannelDTO() {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="EnrichedChannelDTO"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static EnrichedChannelDTO CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new EnrichedChannelDTO();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"autoUpdatePolicy", n => { AutoUpdatePolicy = n.GetStringValue(); } },
                {"channelTypeUID", n => { ChannelTypeUID = n.GetStringValue(); } },
                {"configuration", n => { Configuration = n.GetObjectValue<EnrichedChannelDTO_configuration>(EnrichedChannelDTO_configuration.CreateFromDiscriminatorValue); } },
                {"defaultTags", n => { DefaultTags = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"description", n => { Description = n.GetStringValue(); } },
                {"id", n => { Id = n.GetStringValue(); } },
                {"itemType", n => { ItemType = n.GetStringValue(); } },
                {"kind", n => { Kind = n.GetStringValue(); } },
                {"label", n => { Label = n.GetStringValue(); } },
                {"linkedItems", n => { LinkedItems = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                {"properties", n => { Properties = n.GetObjectValue<EnrichedChannelDTO_properties>(EnrichedChannelDTO_properties.CreateFromDiscriminatorValue); } },
                {"uid", n => { Uid = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("autoUpdatePolicy", AutoUpdatePolicy);
            writer.WriteStringValue("channelTypeUID", ChannelTypeUID);
            writer.WriteObjectValue<EnrichedChannelDTO_configuration>("configuration", Configuration);
            writer.WriteCollectionOfPrimitiveValues<string>("defaultTags", DefaultTags);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("itemType", ItemType);
            writer.WriteStringValue("kind", Kind);
            writer.WriteStringValue("label", Label);
            writer.WriteCollectionOfPrimitiveValues<string>("linkedItems", LinkedItems);
            writer.WriteObjectValue<EnrichedChannelDTO_properties>("properties", Properties);
            writer.WriteStringValue("uid", Uid);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
