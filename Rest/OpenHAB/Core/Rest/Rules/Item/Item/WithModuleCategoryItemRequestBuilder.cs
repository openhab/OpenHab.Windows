// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using OpenHAB.Core.Rest.Rules.Item.Item.Item;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace OpenHAB.Core.Rest.Rules.Item.Item {
    /// <summary>
    /// Builds and executes requests for operations under \rules\{ruleUID}\{moduleCategory}
    /// </summary>
    public class WithModuleCategoryItemRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the openHAB.Core.Rest.rules.item.item.item collection</summary>
        /// <param name="position">id</param>
        /// <returns>A <see cref="ModuleCategoryItemRequestBuilder"/></returns>
        public ModuleCategoryItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("id", position);
            return new ModuleCategoryItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new <see cref="WithModuleCategoryItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithModuleCategoryItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rules/{ruleUID}/{moduleCategory}", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new <see cref="WithModuleCategoryItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public WithModuleCategoryItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/rules/{ruleUID}/{moduleCategory}", rawUrl) {
        }
    }
}
